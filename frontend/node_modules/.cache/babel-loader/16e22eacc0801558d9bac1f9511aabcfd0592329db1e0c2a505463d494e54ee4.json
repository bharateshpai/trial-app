{"ast":null,"code":"var _jsxFileName = \"/Users/amalapai/code/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\nimport { ForgotPassword } from './components/ForgotPassword';\nimport { ResetPassword } from './components/ResetPassword';\nimport { authService } from './services/authService';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!authService.getToken());\n  const [showRegister, setShowRegister] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [resetToken, setResetToken] = useState('');\n  useEffect(() => {\n    // Check for reset token in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    if (token) {\n      setResetToken(token);\n    }\n  }, []);\n  const handleAuthSuccess = () => {\n    setIsLoggedIn(true);\n    setShowRegister(false);\n    setShowForgotPassword(false);\n    setResetToken('');\n  };\n  const handleLogout = () => {\n    authService.logout();\n    setIsLoggedIn(false);\n  };\n  const handleLoginClick = () => {\n    setShowRegister(false);\n    setShowForgotPassword(false);\n    setResetToken('');\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You are successfully logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"submit-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  if (resetToken) {\n    return /*#__PURE__*/_jsxDEV(ResetPassword, {\n      token: resetToken,\n      onSuccess: handleAuthSuccess,\n      onLoginClick: handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (showForgotPassword) {\n    return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n      onLoginClick: handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (showRegister) {\n    return /*#__PURE__*/_jsxDEV(Register, {\n      onSuccess: handleAuthSuccess,\n      onLoginClick: handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Login, {\n    onSuccess: handleAuthSuccess,\n    onRegisterClick: () => setShowRegister(true),\n    onForgotPasswordClick: () => setShowForgotPassword(true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tOsontHU/LRs+F0uPLMg9y2z0/I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","ForgotPassword","ResetPassword","authService","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","getToken","showRegister","setShowRegister","showForgotPassword","setShowForgotPassword","resetToken","setResetToken","urlParams","URLSearchParams","window","location","search","token","get","handleAuthSuccess","handleLogout","logout","handleLoginClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSuccess","onLoginClick","onRegisterClick","onForgotPasswordClick","_c","$RefreshReg$"],"sources":["/Users/amalapai/code/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\nimport { ForgotPassword } from './components/ForgotPassword';\nimport { ResetPassword } from './components/ResetPassword';\nimport { authService } from './services/authService';\nimport './App.css';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!authService.getToken());\n  const [showRegister, setShowRegister] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [resetToken, setResetToken] = useState('');\n\n  useEffect(() => {\n    // Check for reset token in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    if (token) {\n      setResetToken(token);\n    }\n  }, []);\n\n  const handleAuthSuccess = () => {\n    setIsLoggedIn(true);\n    setShowRegister(false);\n    setShowForgotPassword(false);\n    setResetToken('');\n  };\n\n  const handleLogout = () => {\n    authService.logout();\n    setIsLoggedIn(false);\n  };\n\n  const handleLoginClick = () => {\n    setShowRegister(false);\n    setShowForgotPassword(false);\n    setResetToken('');\n  };\n\n  if (isLoggedIn) {\n    return (\n      <div className=\"auth-container\">\n        <div className=\"auth-box\">\n          <h2>Welcome!</h2>\n          <p>You are successfully logged in.</p>\n          <button onClick={handleLogout} className=\"submit-button\">\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (resetToken) {\n    return (\n      <ResetPassword\n        token={resetToken}\n        onSuccess={handleAuthSuccess}\n        onLoginClick={handleLoginClick}\n      />\n    );\n  }\n\n  if (showForgotPassword) {\n    return <ForgotPassword onLoginClick={handleLoginClick} />;\n  }\n\n  if (showRegister) {\n    return (\n      <Register\n        onSuccess={handleAuthSuccess}\n        onLoginClick={handleLoginClick}\n      />\n    );\n  }\n\n  return (\n    <Login\n      onSuccess={handleAuthSuccess}\n      onRegisterClick={() => setShowRegister(true)}\n      onForgotPasswordClick={() => setShowForgotPassword(true)}\n    />\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAACM,WAAW,CAACO,QAAQ,CAAC,CAAC,CAAC;EACtE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,KAAK,GAAGL,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IACpC,IAAID,KAAK,EAAE;MACTN,aAAa,CAACM,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bf,aAAa,CAAC,IAAI,CAAC;IACnBG,eAAe,CAAC,KAAK,CAAC;IACtBE,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBtB,WAAW,CAACuB,MAAM,CAAC,CAAC;IACpBjB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bf,eAAe,CAAC,KAAK,CAAC;IACtBE,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,IAAIR,UAAU,EAAE;IACd,oBACEH,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BxB,OAAA;QAAKuB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBxB,OAAA;UAAAwB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB5B,OAAA;UAAAwB,QAAA,EAAG;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtC5B,OAAA;UAAQ6B,OAAO,EAAET,YAAa;UAACG,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAEzD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIlB,UAAU,EAAE;IACd,oBACEV,OAAA,CAACH,aAAa;MACZoB,KAAK,EAAEP,UAAW;MAClBoB,SAAS,EAAEX,iBAAkB;MAC7BY,YAAY,EAAET;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEN;EAEA,IAAIpB,kBAAkB,EAAE;IACtB,oBAAOR,OAAA,CAACJ,cAAc;MAACmC,YAAY,EAAET;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3D;EAEA,IAAItB,YAAY,EAAE;IAChB,oBACEN,OAAA,CAACL,QAAQ;MACPmC,SAAS,EAAEX,iBAAkB;MAC7BY,YAAY,EAAET;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEN;EAEA,oBACE5B,OAAA,CAACN,KAAK;IACJoC,SAAS,EAAEX,iBAAkB;IAC7Ba,eAAe,EAAEA,CAAA,KAAMzB,eAAe,CAAC,IAAI,CAAE;IAC7C0B,qBAAqB,EAAEA,CAAA,KAAMxB,qBAAqB,CAAC,IAAI;EAAE;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEN;AAAC1B,EAAA,CA7EQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA+EZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}